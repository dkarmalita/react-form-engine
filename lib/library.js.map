{"version":3,"sources":["webpack://@kard/react-form-engine/webpack/universalModuleDefinition","webpack://@kard/react-form-engine/webpack/bootstrap","webpack://@kard/react-form-engine/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"umd\":\"react\",\"root\":\"React\"}","webpack://@kard/react-form-engine/./src/FormProvider.jsx","webpack://@kard/react-form-engine/./src/utils/combineArraysUnique.js","webpack://@kard/react-form-engine/./src/FormComponent.jsx","webpack://@kard/react-form-engine/./src/utils/isObjectsEqual.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FormContext","external_commonjs_react_commonjs2_react_umd_react_root_React_default","a","createContext","FormProvider_FormProvider","_Component","FormProvider","_ref","_temp","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","state","formBuffer","blocked","_inherits","external_commonjs_react_commonjs2_react_umd_react_root_React_","_createClass","acc","keys","map","fieldName","stateAcc","dirty","touched","valid","reset","_this2","formLink","setFieldState","fieldState","cb","setState","prevState","props","_extends","_defineProperty","onChange","getFieldState","getFieldInitialValue","initialValue","getFormState","_getFormState","getFormValue","_getFormValue","getFieldsState","resetForm","_resetForm","createElement","Provider","children","FormProvider_withFormContext","FormComponent","_Component2","_class","_this4","Consumer","FormComponent_asField","WrappedField","defaultValue","undefined","_FormComponent","FormComponent_classCallCheck","FormComponent_possibleConstructorReturn","_getInitialValue","_setFieldState","_getFieldState","_setFieldValue","_getFieldValue","_invalidate","_checkFormContext","_setFocused","_getCleanProps","_init","FormComponent_inherits","FormComponent_createClass","FormComponent_extends","_prepareState","focused","_props","newState","_props2","isObjectsEqual","x","y","constructor","Function","RegExp","valueOf","isArray","Date","every","indexOf","_props3","errorShown","console","error","errors","onValidate","disabled","nextErrors","arrA","arrB","forEach","errId","push","combineArraysUnique","oldState","_props4","_objectWithoutProperties","onFocus","onBlur","defaultProps","FormComponent_asInputField","InputComponent","WrappedInput","event","target","FormComponent_asCheckboxField","_Component3","_this6","checked","onClick","onKeyPress","FormComponent_asRadioButtonField","_Component4","_this8","option"],"mappings":"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","file":"library.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@kard/react-form-engine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@kard/react-form-engine\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"@kard/react-form-engine\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import React, { Component } from 'react'\n\nconst FormContext = React.createContext( null )\n// Note: createContext takes the default context state\n// used while the component in placed outside the context\n\nexport class FormProvider extends Component {\n\n  state = { formBuffer: {}, blocked: false }\n\n  _getFormValue(){\n    const { formBuffer } = this.state\n    const acc = {}\n    Object.keys( formBuffer ).map( fieldName => {\n      acc[fieldName] = formBuffer[fieldName].value\n    })\n    return acc\n  }\n\n  _getFormState(){\n    const { formBuffer } = this.state\n    const stateAcc = { dirty: false, touched: false, valid: true }\n    Object.keys( formBuffer ).map( fieldName => {\n      stateAcc.dirty = stateAcc.dirty || formBuffer[fieldName].dirty\n      stateAcc.touched = stateAcc.touched || formBuffer[fieldName].touched\n      stateAcc.valid = !stateAcc.valid || !formBuffer[fieldName].valid\n    })\n    return stateAcc\n  }\n\n  _resetForm(){\n    const { formBuffer } = this.state\n    Object.keys( formBuffer ).map( fieldName => formBuffer[fieldName].reset())\n  }\n\n  /**\n   * `render` is only used to render the component's children in the context of the\n   * `formLink` structure which contains all of the necessary form-wide fields.\n   * @return {Component}\n   */\n  render(){\n    const formLink = {\n\n      /* field mathods */\n\n      setFieldState : ( fieldName, fieldState, cb ) => this.setState(( prevState, props ) => ({\n        ...prevState,\n        formBuffer : {\n          ...prevState.formBuffer,\n          [fieldName] : fieldState,\n        },\n      }), () => {\n        const { onChange } = this.props\n        if( cb ){ cb() }\n        if( onChange ){ onChange( this.state.formBuffer ) }\n      }),\n\n      getFieldState : ( fieldName ) => this.state.formBuffer[fieldName],\n\n      getFieldInitialValue : ( fieldName ) => ( this.props.initialValue || {})[fieldName],\n\n      /* form methods */\n\n      // __setState : this.setState, // undocumented for now\n\n      getFormState : () => this._getFormState(),\n\n      getFormValue : () => this._getFormValue(),\n\n      getFieldsState : () => this.state.formBuffer,\n\n      resetForm : () => this._resetForm(),\n    }\n\n    return (\n      <FormContext.Provider value={formLink}>\n        {this.props.children}\n      </FormContext.Provider>\n    )\n  }\n\n}\n\n/**\n * HOC which is used to convert Basic Input Components to those connected to the form's context.\n * @param  {Component} FormComponent - one of the Basic Input Components.\n * @return {Component} - Connected to the form's context Component.\n */\nexport const withFormContext = FormComponent =>\n  class extends Component {\n\n    render(){\n      return (\n        <FormContext.Consumer>\n          { formLink => <FormComponent {...this.props} formLink={formLink} /> }\n        </FormContext.Consumer>\n      )\n    }\n\n  }\n","// @kard js snippet\n/**\n * Add elements from arrB to arrA. Each element is addad only if\n * is absent in the arrA.\n * @param  {Array} arrA - array of unique errors ids\n * @param  {Array} arrB - array of unique errors ids to add to errorsBuffer\n * @return {Array]} - combined array of errors\n */\nexport const combineArraysUnique = ( arrA = [], arrB = []) => {\n  const acc = [].concat( arrA )\n\n  // Add only items are not in the list yet\n  arrB.forEach( errId => {\n    if( !~arrA.indexOf( errId )){\n    // ref: https://www.joezimjs.com/javascript/great-mystery-of-the-tilde/\n      acc.push( errId )\n    }\n  })\n\n  return acc\n}\n","import React, { Component } from 'react'\nimport { isObjectsEqual } from './utils/isObjectsEqual'\nimport { combineArraysUnique as combineErrors } from './utils/combineArraysUnique'\nimport { withFormContext } from './FormProvider'\n\n/**\n * A link which become a part of error message. Should point to the documentation.\n */\n// eslint-disable-next-line camelcase\nconst helpLink_formBoundaries = 'http://example.com'\n\n/**\n * Note: About field state. Each field has several properties in its state:\n * - value {Any} - contains the field value\n * - errors {Array of Strings} - contains error messages of the current value\n * - focused {Bool} - true while the field focused\n * - dirty {Bool} - true while the field contains changed value\n * - touched {Bool} - true while the field is/was focused\n * - valid {Bool} - true while the field contains no errors\n */\nexport const asField = ( WrappedField, defaultValue = '' ) => {\n  class _FormComponent extends Component {\n\n    static defaultProps = {\n      // defaultValue: '',\n      fieldName  : '',\n      onValidate : () => [],\n    }\n\n    constructor( props ){\n      super( props )\n      this._getInitialValue = this._getInitialValue.bind( this )\n      this._setFieldState = this._setFieldState.bind( this )\n      this._getFieldState = this._getFieldState.bind( this )\n      this._setFieldValue = this._setFieldValue.bind( this )\n      this._getFieldValue = this._getFieldValue.bind( this )\n      this._invalidate = this._invalidate.bind( this )\n      this._setFieldValue = this._setFieldValue.bind( this )\n      this._checkFormContext = this._checkFormContext.bind( this )\n      this._setFocused = this._setFocused.bind( this )\n      this._getCleanProps = this._getCleanProps.bind( this )\n      this._init = this._init.bind( this )\n      this._init()\n    }\n\n    _init(){\n      this._setFieldState({\n        ...this._prepareState( this._getInitialValue()),\n        touched : false,\n        focused : false,\n        reset   : this._init,\n      })\n    }\n\n    /**\n     * The only method to get initial value from the level of form\n     * @return {Any} - initial value or undefined if no value is given\n     */\n    _getInitialValue(){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      return formLink.getFieldInitialValue( fieldName ) || defaultValue\n    }\n\n    /**\n     * The only method to set state of the field\n     * @param {Object} newState - the whole field state\n     */\n    _setFieldState( newState ){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      const oldState = this._getFieldState()\n      if( isObjectsEqual( oldState, newState )){ return } // prevent state update if no changes in it\n      formLink.setFieldState( fieldName, newState )\n    }\n\n    /**\n     * The only method to get state of the field\n     * @return {Object} - the state of the field\n     */\n    _getFieldState(){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      const state = formLink.getFieldState( fieldName )\n      return typeof state != 'undefined' ? state : {}\n    }\n\n    /**\n     * Check if the Component is placed inside a form context.\n     * Puts the error message in the console only one time per component.\n     * @return {Bool} - true while the field is in a form context, false - in other case\n     */\n    _checkFormContext(){\n      if( this.props.formLink ){ return true }\n      if( this.errorShown ){ return false }\n      console.error(\n        `${this.constructor.name} must be used in bounds of FormProvider. `\n        // eslint-disable-next-line camelcase\n        + `Visit ${helpLink_formBoundaries} to learn more about the form boundaries.`\n      )\n      this.errorShown = true\n      return false\n    }\n\n    /**\n     * The only method to prepare the data state for a value within valid, errors and dirty fields filled\n     * @param {Any} newValue - new field value\n     * @return {Object} - field state within all data propeties\n     */\n    _prepareState( value ){\n      const dirty = value !== this._getInitialValue()\n      const errors = this.props.onValidate( value, this._invalidate )\n      const valid = errors.length === 0\n      return { ...this._getFieldState(), value, dirty, errors, valid }\n    }\n\n    /**\n     * The only method to set value of the field. Except the value, the method sets data-related field's properties: valid, errors and dirty.\n     * @param {Any} newValue - new field value\n     */\n    _setFieldValue( value ){\n      if( this.props.disabled ){ return } // only an enabled field can update its value\n      this._setFieldState( this._prepareState( value ))\n    }\n\n    /**\n     * The main method to get field value. _getFieldState is better to use in cases when you need to get fields attributes too.\n     * @return {Any} - the current value of the field\n     */\n    _getFieldValue(){\n      return this._getFieldState().value\n    }\n\n    /**\n     * The method is used to invalidate some value of the field. It is passed as the second paramater to onValidate handler and is used for async invalidation (see example)\n     * @param  {Any} value - a value to invalidate\n     * @param  {Array of Strings} errors - an array of errors found\n     * @return {[type]}        [description]\n     * @example\n     *   function handleOnValidate( value, invalidate ){\n     *     getAsyncErrors( value ).then( { value, errors }=>invalidate( value, errors ) )\n     *     return getSyncErrors( value )\n     *   }\n     */\n    _invalidate( value, errors = []){\n      const state = this._getFieldState()\n      if( state.value !== value || errors.length === 0 ){ return }\n      const nextErrors = combineErrors( state.errors, errors )\n      this._setFieldState({ ...state, errors: nextErrors })\n    }\n\n    /**\n     * The only method to change focused value, keeps its eye on the touched property too.\n     * @param {Bool} focused - the focused state to set.\n     */\n    _setFocused( focused ){\n      const oldState = this._getFieldState()\n      const touched = focused || oldState.focused\n      this._setFieldState({ ...oldState, focused, touched })\n    }\n\n    /**\n     * The only method allows to get props cleaned from form-specific instances, suitable to be passed to a DOM tag.\n     * @return {Objec} - cleaned property set\n     */\n    _getCleanProps(){\n      const {       /* = known field properties = */\n        fieldName,  // used as the field name in the form buffer /* --and as a value of name prop-- */\n        onValidate, // used each time when a change happen to validate the updated value\n        formLink,   // provides the form-level methods\n        // option,  // for multi-controls fields, contains option value for this control\n        ...other\n      } = this.props\n      return other\n    }\n\n    render(){\n      const value = this._getFieldValue()\n      return (\n        <WrappedField\n          {...this._getCleanProps()}\n          value={typeof value != 'undefined' ? value : defaultValue}\n          onChange={( value ) => this._setFieldValue( value )}\n          onFocus={() => this._setFocused( true )}\n          onBlur={() => this._setFocused( false )}\n          // name={ this.props.fieldName }\n        />\n      )\n    }\n\n  }\n\n  return withFormContext( _FormComponent )\n}\n\n/* connection models HOCs */\n\nexport const asInputField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={( event ) => this.props.onChange( event.target.value )}\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n\nexport const asCheckboxField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={null}\n          checked={this.props.value}\n          onClick={() => this.props.onChange( !this.props.value )}\n          onKeyPress={() => this.props.onChange( !this.props.value )} // add support of keyboard enter\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n\nexport const asRadioButtonField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={null}\n          checked={this.props.value === this.props.option}\n          onClick={() => this.props.onChange( this.props.option )}\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n","// @kard js snippet\n/**\n * isObjectsEqual Deeply chack two objects for equality\n * idea: https://stackoverflow.com/a/16788517\n * @param  {Object}  x - the first object to compare\n * @param  {Object}  y - the second object to compare\n * @return {Boolean} - true when objects equal, false in another case\n */\nexport function isObjectsEqual( x, y ){\n  if( x === null || x === undefined || y === null || y === undefined ){ return x === y }\n\n  // after this just checking type of one would be enough\n  if( x.constructor !== y.constructor ){ return false }\n\n  // if they are functions, they should exactly refer to same one (because of closures)\n  if( x instanceof Function ){ return x === y }\n\n  // if they are regexps, they should exactly refer to same one (it is hard to better equality check on current ES)\n  if( x instanceof RegExp ){ return x === y }\n  if( x === y || x.valueOf() === y.valueOf()){ return true }\n  if( Array.isArray( x ) && x.length !== y.length ){ return false }\n\n  // if they are dates, they must had equal valueOf\n  if( x instanceof Date ){ return false }\n\n  // if they are strictly equal, they both need to be object at least\n  if( !( x instanceof Object )){ return false }\n  if( !( y instanceof Object )){ return false }\n\n  // recursive object equality check\n  var p = Object.keys( x )\n  return Object.keys( y ).every( function( i ){ return p.indexOf( i ) !== -1 })\n        && p.every( function( i ){ return isObjectsEqual( x[i], y[i]) })\n}\n"],"sourceRoot":""}