{"version":3,"sources":["webpack://@kard/react-form-engine/webpack/universalModuleDefinition","webpack://@kard/react-form-engine/webpack/bootstrap","webpack://@kard/react-form-engine/./src/FormComponent.jsx","webpack://@kard/react-form-engine/./src/FormProvider.jsx","webpack://@kard/react-form-engine/./src/index.js","webpack://@kard/react-form-engine/./src/utils/combineArraysUnique.js","webpack://@kard/react-form-engine/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"umd\":\"react\",\"root\":\"React\"}"],"names":["helpLink_formBoundaries","asField","WrappedField","defaultValue","_FormComponent","props","_getInitialValue","bind","_setFieldState","_getFieldState","_setFieldValue","_getFieldValue","_invalidate","_checkFormContext","_setFocused","_getCleanProps","_init","_prepareState","touched","focused","reset","fieldName","formLink","getFieldInitialValue","newState","oldState","setFieldState","state","getFieldState","errorShown","console","error","constructor","name","value","declined","onTest","dirty","errors","onValidate","valid","length","disabled","normalize","nextErrors","combineErrors","other","defaultProps","withFormContext","asInputField","InputComponent","WrappedInput","event","onChange","target","asCheckboxField","asRadioButtonField","option","FormContext","React","createContext","FormProvider","formBuffer","blocked","_getFormValue","_getFormState","_resetForm","_getFormLink","onReady","acc","Object","keys","map","stateAcc","fieldState","cb","setState","prevState","initialValue","getFormState","getFormValue","getFieldsState","resetForm","children","combineArraysUnique","a1","a2","addEl","el","indexOf","push","forEach"],"mappings":"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","file":"library.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@kard/react-form-engine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@kard/react-form-engine\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"@kard/react-form-engine\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import React, { Component } from 'react'\n// import { objectsEqual } from './utils/objectsEqual'\nimport { combineArraysUnique as combineErrors } from './utils/combineArraysUnique'\nimport { withFormContext } from './FormProvider'\n\n/**\n * A link which become a part of error message. Should point to the documentation.\n */\n// eslint-disable-next-line camelcase\nconst helpLink_formBoundaries = 'http://example.com'\n\n/**\n * Note: About field state. Each field has several properties in its state:\n * - value {Any} - contains the field value\n * - errors {Array of Strings} - contains error messages of the current value\n * - focused {Bool} - true while the field focused\n * - dirty {Bool} - true while the field contains changed value\n * - touched {Bool} - true while the field is/was focused\n * - valid {Bool} - true while the field contains no errors\n * - declined {Bool} - true when the latest value was declined by onTest handler\n */\nexport const asField = ( WrappedField, defaultValue = '' ) => {\n  class _FormComponent extends Component {\n\n    static defaultProps = {\n      // defaultValue: '',\n      fieldName  : '',\n      onValidate : () => [],\n      onTest     : () => true,\n    }\n\n    constructor( props ){\n      super( props )\n      this._getInitialValue = this._getInitialValue.bind( this )\n      this._setFieldState = this._setFieldState.bind( this )\n      this._getFieldState = this._getFieldState.bind( this )\n      this._setFieldValue = this._setFieldValue.bind( this )\n      this._getFieldValue = this._getFieldValue.bind( this )\n      this._invalidate = this._invalidate.bind( this )\n      this._setFieldValue = this._setFieldValue.bind( this )\n      this._checkFormContext = this._checkFormContext.bind( this )\n      this._setFocused = this._setFocused.bind( this )\n      this._getCleanProps = this._getCleanProps.bind( this )\n      this._init = this._init.bind( this )\n      this._init()\n    }\n\n    _init(){\n      this._setFieldState({\n        ...this._prepareState( this._getInitialValue()),\n        touched : false,\n        focused : false,\n        reset   : this._init,\n      })\n    }\n\n    /**\n     * The only method to get initial value from the level of form\n     * @return {Any} - initial value or undefined if no value is given\n     */\n    _getInitialValue(){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      return formLink.getFieldInitialValue( fieldName ) || defaultValue\n    }\n\n    /**\n     * The only method to set state of the field\n     * @param {Object} newState - the whole field state\n     */\n    _setFieldState( newState ){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      const oldState = this._getFieldState()\n      // if( objectsEqual( oldState, newState )){ return } // prevent state update if no changes in it\n      formLink.setFieldState( fieldName, newState )\n    }\n\n    /**\n     * The only method to get state of the field\n     * @return {Object} - the state of the field\n     */\n    _getFieldState(){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      const state = formLink.getFieldState( fieldName )\n      return typeof state != 'undefined' ? state : {}\n    }\n\n    /**\n     * Check if the Component is placed inside a form context.\n     * Puts the error message in the console only one time per component.\n     * @return {Bool} - true while the field is in a form context, false - in other case\n     */\n    _checkFormContext(){\n      if( this.props.formLink ){ return true }\n      if( this.errorShown ){ return false }\n      console.error(\n        `${this.constructor.name} must be used in bounds of FormProvider. `\n        // eslint-disable-next-line camelcase\n        + `Visit ${helpLink_formBoundaries} to learn more about the form boundaries.`\n      )\n      this.errorShown = true\n      return false\n    }\n\n    /**\n     * The only method to prepare the data state for a value within valid, errors and dirty fields filled\n     * @param {Any} newValue - new field value\n     * @return {Object} - field state within all data propeties\n     */\n    _prepareState( value ){\n      const declined = !this.props.onTest( value )\n      if( declined ){\n        return { ...this._getFieldState(), declined }\n      }\n      const dirty = value !== this._getInitialValue()\n      const errors = this.props.onValidate( value, this._invalidate )\n      const valid = errors.length === 0\n      return { ...this._getFieldState(), value, dirty, errors, valid, declined }\n    }\n\n    /**\n     * The only method to set value of the field. Except the value, the method sets data-related field's properties: valid, errors and dirty.\n     * @param {Any} newValue - new field value\n     */\n    _setFieldValue( value ){\n      if( this.props.disabled ){ return } // only an enabled field can update its value\n      this._setFieldState( this._prepareState( this.props.normalize ? this.props.normalize(value) : value ))\n    }\n\n    /**\n     * The main method to get field value. _getFieldState is better to use in cases when you need to get fields attributes too.\n     * @return {Any} - the current value of the field\n     */\n    _getFieldValue(){\n      return this._getFieldState().value\n    }\n\n    /**\n     * The method is used to invalidate some value of the field. It is passed as the second paramater to onValidate handler and is used for async invalidation (see example)\n     * @param  {Any} value - a value to invalidate\n     * @param  {Array of Strings} errors - an array of errors found\n     * @return {[type]}        [description]\n     * @example\n     *   function handleOnValidate( value, invalidate ){\n     *     getAsyncErrors( value ).then( { value, errors }=>invalidate( value, errors ) )\n     *     return getSyncErrors( value )\n     *   }\n     */\n    _invalidate( value, errors = []){\n      const state = this._getFieldState()\n      if( state.value !== value || errors.length === 0 ){ return }\n      const nextErrors = combineErrors( state.errors, errors )\n      this._setFieldState({ ...state, errors: nextErrors })\n    }\n\n    /**\n     * The only method to change focused value, keeps its eye on the touched property too.\n     * @param {Bool} focused - the focused state to set.\n     */\n    _setFocused( focused ){\n      const oldState = this._getFieldState()\n      const touched = focused || oldState.focused\n      this._setFieldState({ ...oldState, focused, touched })\n    }\n\n    /**\n     * The only method allows to get props cleaned from form-specific instances, suitable to be passed to a DOM tag.\n     * @return {Objec} - cleaned property set\n     */\n    _getCleanProps(){\n      const {       /* = known field properties = */\n        fieldName,  // used as the field name in the form buffer /* --and as a value of name prop-- */\n        onValidate, // used each time when a change happen to validate the updated value\n        onTest,\n        formLink,   // provides the form-level methods\n        // option,  // for multi-controls fields, contains option value for this control\n        normalize,\n        ...other\n      } = this.props\n      return other\n    }\n\n    render(){\n      const value = this._getFieldValue()\n      return (\n        <WrappedField\n          {...this._getCleanProps()}\n          value={typeof value != 'undefined' ? value : defaultValue}\n          onChange={( value ) => this._setFieldValue( value )}\n          onFocus={() => this._setFocused( true )}\n          onBlur={() => this._setFocused( false )}\n          // name={ this.props.fieldName }\n        />\n      )\n    }\n\n  }\n\n  return withFormContext( _FormComponent )\n}\n\n/* connection models HOCs */\n\nexport const asInputField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={( event ) => this.props.onChange( event.target.value )}\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n\nexport const asCheckboxField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={null}\n          checked={this.props.value}\n          onClick={() => this.props.onChange( !this.props.value )}\n          onKeyPress={() => this.props.onChange( !this.props.value )} // add support of keyboard enter\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n\nexport const asRadioButtonField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={null}\n          checked={this.props.value === this.props.option}\n          onClick={() => this.props.onChange( this.props.option )}\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n","import React, { Component } from 'react'\n\nconst FormContext = React.createContext( null )\n// Note: createContext takes the default context state\n// used while the component in placed outside the context\n\nexport class FormProvider extends Component {\n\n  static defaultProps = {\n    initialValue : {},\n    onChange     : () => {},\n    onReady      : () => {},\n  }\n\n  state = { formBuffer: {}, blocked: false }\n\n  constructor( props ){\n    super( props )\n\n    this._getFormValue = this._getFormValue.bind( this )\n    this._getFormState = this._getFormState.bind( this )\n    this._resetForm = this._resetForm.bind( this )\n    this._getFormLink = this._getFormLink.bind( this )\n\n    const { formBuffer } = this.state\n    const formLink = this._getFormLink()\n    this.props.onReady( formLink )\n  }\n\n  _getFormValue(){\n    const { formBuffer } = this.state\n    const acc = {}\n    Object.keys( formBuffer ).map( fieldName => {\n      acc[fieldName] = formBuffer[fieldName].value\n    })\n    return acc\n  }\n\n  _getFormState(){\n    const { formBuffer } = this.state\n    const stateAcc = { dirty: false, touched: false, valid: true }\n    Object.keys( formBuffer ).map( fieldName => {\n      stateAcc.dirty = stateAcc.dirty || formBuffer[fieldName].dirty\n      stateAcc.touched = stateAcc.touched || formBuffer[fieldName].touched\n      stateAcc.valid = !stateAcc.valid || !formBuffer[fieldName].valid\n    })\n    return stateAcc\n  }\n\n  _resetForm(){\n    const { formBuffer } = this.state\n    Object.keys( formBuffer ).map( fieldName => formBuffer[fieldName].reset())\n  }\n\n  _getFormLink(){\n    const formLink = {\n\n      /* field mathods */\n\n      setFieldState : ( fieldName, fieldState, cb ) => this.setState(( prevState, props ) => ({\n        ...prevState,\n        formBuffer : {\n          ...prevState.formBuffer,\n          [fieldName] : fieldState,\n        },\n      }), () => {\n        const { onChange } = this.props\n        if( cb ){ cb() }\n        onChange( this.state.formBuffer )\n      }),\n\n      getFieldState : ( fieldName ) => this.state.formBuffer[fieldName],\n\n      getFieldInitialValue : ( fieldName ) => this.props.initialValue[fieldName],\n\n      /* form methods */\n\n      // __setState : this.setState, // undocumented for now\n\n      getFormState : () => this._getFormState(),\n\n      getFormValue : () => this._getFormValue(),\n\n      getFieldsState : () => this.state.formBuffer,\n\n      resetForm : () => this._resetForm(),\n    }\n    return formLink\n  }\n\n  /**\n   * `render` is only used to render the component's children in the context of the\n   * `formLink` structure which contains all of the necessary form-wide fields.\n   * @return {Component}\n   */\n  render(){\n    const formLink = this._getFormLink()\n    return (\n      <FormContext.Provider value={formLink}>\n        {this.props.children}\n      </FormContext.Provider>\n    )\n  }\n\n}\n\n/**\n * HOC which is used to convert Basic Input Components to those connected to the form's context.\n * @param  {Component} FormComponent - one of the Basic Input Components.\n * @return {Component} - Connected to the form's context Component.\n */\nexport const withFormContext = FormComponent =>\n  class extends Component {\n\n    render(){\n      return (\n        <FormContext.Consumer>\n          { formLink => <FormComponent {...this.props} formLink={formLink} /> }\n        </FormContext.Consumer>\n      )\n    }\n\n  }\n","export { FormProvider, withFormContext } from './FormProvider'\nexport { asField, asInputField, asCheckboxField, asRadioButtonField } from './FormComponent'\n","// @kard js snippet\n/**\n * Add elements from arrB to arrA. Each element is addad only if\n * is absent in the arrA.\n * @param  {Array} arrA - array of unique errors ids\n * @param  {Array} arrB - array of unique errors ids to add to errorsBuffer\n * @return {Array]} - combined array of errors\n */\nexport const combineArraysUnique = ( a1 = [], a2 = []) => {\n  const acc = []// .concat( arrA )\n\n  const addEl = ( el ) => { if( !~acc.indexOf( el )){ acc.push( el ) } }\n\n  // Add only items are not in the list yet\n  a1.forEach( addEl )\n\n  // Add only items are not in the list yet\n  a2.forEach( addEl )\n\n  return acc\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"sourceRoot":""}