{"version":3,"sources":["webpack://@kard/react-form-engine/webpack/universalModuleDefinition","webpack://@kard/react-form-engine/webpack/bootstrap","webpack://@kard/react-form-engine/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"umd\":\"react\",\"root\":\"React\"}","webpack://@kard/react-form-engine/./src/FormProvider.jsx","webpack://@kard/react-form-engine/./src/FormComponent.jsx","webpack://@kard/react-form-engine/./src/utils/combineArraysUnique.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FormContext","external_commonjs_react_commonjs2_react_umd_react_root_React_default","a","createContext","FormProvider_FormProvider","_Component","FormProvider","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","state","formBuffer","blocked","_getFormValue","_getFormState","_resetForm","_getFormLink","formLink","onReady","_inherits","external_commonjs_react_commonjs2_react_umd_react_root_React_","_createClass","acc","keys","map","fieldName","stateAcc","dirty","touched","valid","reset","_this2","setFieldState","fieldState","cb","setState","prevState","_extends","_defineProperty","onChange","getFieldState","getFieldInitialValue","initialValue","getFormState","getFormValue","getFieldsState","resetForm","createElement","Provider","children","defaultProps","FormProvider_withFormContext","FormComponent","_Component2","_class","apply","arguments","_this4","Consumer","FormComponent_asField","WrappedField","defaultValue","length","undefined","_FormComponent","FormComponent_classCallCheck","FormComponent_possibleConstructorReturn","_getInitialValue","_setFieldState","_getFieldState","_setFieldValue","_getFieldValue","_invalidate","_checkFormContext","_setFocused","_getCleanProps","_init","FormComponent_inherits","FormComponent_createClass","FormComponent_extends","_prepareState","focused","_props","newState","_props2","_props3","errorShown","console","error","constructor","declined","onTest","errors","onValidate","disabled","nextErrors","a1","a2","addEl","el","indexOf","push","forEach","combineArraysUnique","oldState","_props4","_objectWithoutProperties","onFocus","onBlur","FormComponent_asInputField","InputComponent","WrappedInput","event","target","FormComponent_asCheckboxField","_Component3","_this6","checked","onClick","onKeyPress","FormComponent_asRadioButtonField","_Component4","_this8","option"],"mappings":"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","file":"library.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@kard/react-form-engine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@kard/react-form-engine\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"@kard/react-form-engine\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import React, { Component } from 'react'\n\nconst FormContext = React.createContext( null )\n// Note: createContext takes the default context state\n// used while the component in placed outside the context\n\nexport class FormProvider extends Component {\n\n  static defaultProps = {\n    initialValue : {},\n    onChange     : () => {},\n    onReady      : () => {},\n  }\n\n  state = { formBuffer: {}, blocked: false }\n\n  constructor( props ){\n    super( props )\n    this._getFormValue = this._getFormValue.bind( this )\n    this._getFormState = this._getFormState.bind( this )\n    this._resetForm = this._resetForm.bind( this )\n    this._getFormLink = this._getFormLink.bind( this )\n    const { formBuffer } = this.state\n    const formLink = this._getFormLink()\n    this.props.onReady({ formBuffer, formLink })\n  }\n\n  _getFormValue(){\n    const { formBuffer } = this.state\n    const acc = {}\n    Object.keys( formBuffer ).map( fieldName => {\n      acc[fieldName] = formBuffer[fieldName].value\n    })\n    return acc\n  }\n\n  _getFormState(){\n    const { formBuffer } = this.state\n    const stateAcc = { dirty: false, touched: false, valid: true }\n    Object.keys( formBuffer ).map( fieldName => {\n      stateAcc.dirty = stateAcc.dirty || formBuffer[fieldName].dirty\n      stateAcc.touched = stateAcc.touched || formBuffer[fieldName].touched\n      stateAcc.valid = !stateAcc.valid || !formBuffer[fieldName].valid\n    })\n    return stateAcc\n  }\n\n  _resetForm(){\n    const { formBuffer } = this.state\n    Object.keys( formBuffer ).map( fieldName => formBuffer[fieldName].reset())\n  }\n\n  _getFormLink(){\n    const formLink = {\n\n      /* field mathods */\n\n      setFieldState : ( fieldName, fieldState, cb ) => this.setState(( prevState, props ) => ({\n        ...prevState,\n        formBuffer : {\n          ...prevState.formBuffer,\n          [fieldName] : fieldState,\n        },\n      }), () => {\n        const { onChange } = this.props\n        if( cb ){ cb() }\n        onChange( this.state.formBuffer )\n      }),\n\n      getFieldState : ( fieldName ) => this.state.formBuffer[fieldName],\n\n      getFieldInitialValue : ( fieldName ) => this.props.initialValue[fieldName],\n\n      /* form methods */\n\n      // __setState : this.setState, // undocumented for now\n\n      getFormState : () => this._getFormState(),\n\n      getFormValue : () => this._getFormValue(),\n\n      getFieldsState : () => this.state.formBuffer,\n\n      resetForm : () => this._resetForm(),\n    }\n    return formLink\n  }\n\n  /**\n   * `render` is only used to render the component's children in the context of the\n   * `formLink` structure which contains all of the necessary form-wide fields.\n   * @return {Component}\n   */\n  render(){\n    const formLink = this._getFormLink()\n    return (\n      <FormContext.Provider value={formLink}>\n        {this.props.children}\n      </FormContext.Provider>\n    )\n  }\n\n}\n\n/**\n * HOC which is used to convert Basic Input Components to those connected to the form's context.\n * @param  {Component} FormComponent - one of the Basic Input Components.\n * @return {Component} - Connected to the form's context Component.\n */\nexport const withFormContext = FormComponent =>\n  class extends Component {\n\n    render(){\n      return (\n        <FormContext.Consumer>\n          { formLink => <FormComponent {...this.props} formLink={formLink} /> }\n        </FormContext.Consumer>\n      )\n    }\n\n  }\n","import React, { Component } from 'react'\n// import { objectsEqual } from './utils/objectsEqual'\nimport { combineArraysUnique as combineErrors } from './utils/combineArraysUnique'\nimport { withFormContext } from './FormProvider'\n\n/**\n * A link which become a part of error message. Should point to the documentation.\n */\n// eslint-disable-next-line camelcase\nconst helpLink_formBoundaries = 'http://example.com'\n\n/**\n * Note: About field state. Each field has several properties in its state:\n * - value {Any} - contains the field value\n * - errors {Array of Strings} - contains error messages of the current value\n * - focused {Bool} - true while the field focused\n * - dirty {Bool} - true while the field contains changed value\n * - touched {Bool} - true while the field is/was focused\n * - valid {Bool} - true while the field contains no errors\n * - declined {Bool} - true when the latest value was declined by onTest handler\n */\nexport const asField = ( WrappedField, defaultValue = '' ) => {\n  class _FormComponent extends Component {\n\n    static defaultProps = {\n      // defaultValue: '',\n      fieldName  : '',\n      onValidate : () => [],\n      onTest     : () => true,\n    }\n\n    constructor( props ){\n      super( props )\n      this._getInitialValue = this._getInitialValue.bind( this )\n      this._setFieldState = this._setFieldState.bind( this )\n      this._getFieldState = this._getFieldState.bind( this )\n      this._setFieldValue = this._setFieldValue.bind( this )\n      this._getFieldValue = this._getFieldValue.bind( this )\n      this._invalidate = this._invalidate.bind( this )\n      this._setFieldValue = this._setFieldValue.bind( this )\n      this._checkFormContext = this._checkFormContext.bind( this )\n      this._setFocused = this._setFocused.bind( this )\n      this._getCleanProps = this._getCleanProps.bind( this )\n      this._init = this._init.bind( this )\n      this._init()\n    }\n\n    _init(){\n      this._setFieldState({\n        ...this._prepareState( this._getInitialValue()),\n        touched : false,\n        focused : false,\n        reset   : this._init,\n      })\n    }\n\n    /**\n     * The only method to get initial value from the level of form\n     * @return {Any} - initial value or undefined if no value is given\n     */\n    _getInitialValue(){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      return formLink.getFieldInitialValue( fieldName ) || defaultValue\n    }\n\n    /**\n     * The only method to set state of the field\n     * @param {Object} newState - the whole field state\n     */\n    _setFieldState( newState ){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      const oldState = this._getFieldState()\n      // if( objectsEqual( oldState, newState )){ return } // prevent state update if no changes in it\n      formLink.setFieldState( fieldName, newState )\n    }\n\n    /**\n     * The only method to get state of the field\n     * @return {Object} - the state of the field\n     */\n    _getFieldState(){\n      if( !this._checkFormContext()){ return }\n      const { fieldName, formLink } = this.props\n      const state = formLink.getFieldState( fieldName )\n      return typeof state != 'undefined' ? state : {}\n    }\n\n    /**\n     * Check if the Component is placed inside a form context.\n     * Puts the error message in the console only one time per component.\n     * @return {Bool} - true while the field is in a form context, false - in other case\n     */\n    _checkFormContext(){\n      if( this.props.formLink ){ return true }\n      if( this.errorShown ){ return false }\n      console.error(\n        `${this.constructor.name} must be used in bounds of FormProvider. `\n        // eslint-disable-next-line camelcase\n        + `Visit ${helpLink_formBoundaries} to learn more about the form boundaries.`\n      )\n      this.errorShown = true\n      return false\n    }\n\n    /**\n     * The only method to prepare the data state for a value within valid, errors and dirty fields filled\n     * @param {Any} newValue - new field value\n     * @return {Object} - field state within all data propeties\n     */\n    _prepareState( value ){\n      const declined = !this.props.onTest( value )\n      if( declined ){\n        return { ...this._getFieldState(), declined }\n      }\n      const dirty = value !== this._getInitialValue()\n      const errors = this.props.onValidate( value, this._invalidate )\n      const valid = errors.length === 0\n      return { ...this._getFieldState(), value, dirty, errors, valid, declined }\n    }\n\n    /**\n     * The only method to set value of the field. Except the value, the method sets data-related field's properties: valid, errors and dirty.\n     * @param {Any} newValue - new field value\n     */\n    _setFieldValue( value ){\n      if( this.props.disabled ){ return } // only an enabled field can update its value\n      this._setFieldState( this._prepareState( value ))\n    }\n\n    /**\n     * The main method to get field value. _getFieldState is better to use in cases when you need to get fields attributes too.\n     * @return {Any} - the current value of the field\n     */\n    _getFieldValue(){\n      return this._getFieldState().value\n    }\n\n    /**\n     * The method is used to invalidate some value of the field. It is passed as the second paramater to onValidate handler and is used for async invalidation (see example)\n     * @param  {Any} value - a value to invalidate\n     * @param  {Array of Strings} errors - an array of errors found\n     * @return {[type]}        [description]\n     * @example\n     *   function handleOnValidate( value, invalidate ){\n     *     getAsyncErrors( value ).then( { value, errors }=>invalidate( value, errors ) )\n     *     return getSyncErrors( value )\n     *   }\n     */\n    _invalidate( value, errors = []){\n      const state = this._getFieldState()\n      if( state.value !== value || errors.length === 0 ){ return }\n      const nextErrors = combineErrors( state.errors, errors )\n      this._setFieldState({ ...state, errors: nextErrors })\n    }\n\n    /**\n     * The only method to change focused value, keeps its eye on the touched property too.\n     * @param {Bool} focused - the focused state to set.\n     */\n    _setFocused( focused ){\n      const oldState = this._getFieldState()\n      const touched = focused || oldState.focused\n      this._setFieldState({ ...oldState, focused, touched })\n    }\n\n    /**\n     * The only method allows to get props cleaned from form-specific instances, suitable to be passed to a DOM tag.\n     * @return {Objec} - cleaned property set\n     */\n    _getCleanProps(){\n      const {       /* = known field properties = */\n        fieldName,  // used as the field name in the form buffer /* --and as a value of name prop-- */\n        onValidate, // used each time when a change happen to validate the updated value\n        onTest,\n        formLink,   // provides the form-level methods\n        // option,  // for multi-controls fields, contains option value for this control\n        ...other\n      } = this.props\n      return other\n    }\n\n    render(){\n      const value = this._getFieldValue()\n      return (\n        <WrappedField\n          {...this._getCleanProps()}\n          value={typeof value != 'undefined' ? value : defaultValue}\n          onChange={( value ) => this._setFieldValue( value )}\n          onFocus={() => this._setFocused( true )}\n          onBlur={() => this._setFocused( false )}\n          // name={ this.props.fieldName }\n        />\n      )\n    }\n\n  }\n\n  return withFormContext( _FormComponent )\n}\n\n/* connection models HOCs */\n\nexport const asInputField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={( event ) => this.props.onChange( event.target.value )}\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n\nexport const asCheckboxField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={null}\n          checked={this.props.value}\n          onClick={() => this.props.onChange( !this.props.value )}\n          onKeyPress={() => this.props.onChange( !this.props.value )} // add support of keyboard enter\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n\nexport const asRadioButtonField = ( InputComponent ) => {\n  class WrappedInput extends Component {\n\n    render(){\n      return (\n        <InputComponent {...this.props}\n          onChange={null}\n          checked={this.props.value === this.props.option}\n          onClick={() => this.props.onChange( this.props.option )}\n        />\n      )\n    }\n\n  }\n  return asField( WrappedInput )\n}\n","// @kard js snippet\n/**\n * Add elements from arrB to arrA. Each element is addad only if\n * is absent in the arrA.\n * @param  {Array} arrA - array of unique errors ids\n * @param  {Array} arrB - array of unique errors ids to add to errorsBuffer\n * @return {Array]} - combined array of errors\n */\nexport const combineArraysUnique = ( a1 = [], a2 = []) => {\n  const acc = []// .concat( arrA )\n\n  const addEl = ( el ) => { if( !~acc.indexOf( el )){ acc.push( el ) } }\n\n  // Add only items are not in the list yet\n  a1.forEach( addEl )\n\n  // Add only items are not in the list yet\n  a2.forEach( addEl )\n\n  return acc\n}\n"],"sourceRoot":""}